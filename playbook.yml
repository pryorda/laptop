---
- hosts: all
  vars:
    applications:
      - cyberduck # ftp, s3, openstack
      - dash # totally sick APIÂ browser
      - diffmerge # free visual diq
      - disk-inventory-x # reclaim space on your expensive-ass Apple SSD | http://www.derlien.com/
      - docker
      - dropbox # a worse Mega Sync
      - eul
      - eve # learn your shortcuts
      - firefox 
      - google-chrome
      - keybase
      - little-snitch # awesome outbound firewall
      - monolingual # remove unneeded osx lang files
      - qlcolorcode # quick look syntax highlighting
      - qlimagesize # quick look image dimensions
      - qlmarkdown # quick look .md files
      - qlstephen # quick look extension-less text files
      - rowanj-gitx # Awesome gitx fork.
      - torbrowser # be the noise
      - vagrant # | https://www.vagrantup.com/downloads.html
      - vagrant-manager # 
      - virtualbox # | https://www.virtualbox.org/
      - vlc 
      - zoomus # better videoconferences

    install_oh_my_zsh:  true

    brew_taps:
      - caskroom/cask
      - homebrew/binary
      - homebrew/dupes # gnu grep
      - homebrew/versions 

    dotfile_repo_username: pryorda # the GH repo where your dotfiles are

    brew_utils:
      - cowsay # amazing
      - coreutils # Install GNU core utilities (those that come with OS X are outdated)
      - findutils  # Install GNU `find`, `locate`, `updatedb`, and `xargs`, g-prefixed
      - gh
      - git
      - go
      - gpg
      - hub # github
      - mtr # better traceroute
      - packer
      - rsync
      - tmux
      - terraform
      - vim
      - wget
      - zsh

    zsh_path: /bin/zsh

    home: "{{ lookup('env','HOME') }}"

  tasks:
    ### UTILS

    - name: Install libraries/utils with homebrew
      homebrew: name={{ item }} state=present
      loop: "{{ brew_utils }}"
    
    - name: Cleanup after brewing
      shell: brew cleanup

    ### APPZ

    - name: Check for installed apps(casks)
      shell: brew list --cask | grep {{ item }}
      register: installed_applications
      loop: "{{ applications }}"
      ignore_errors: true
    
    - name: Install Apps with brew-cask
      shell: brew install --cask {{ item }}
      loop: "{{ applications }}"
      when: "{{ item not in installed_applications.results|map(attribute='stdout') }}"

    - name: Install oh-my-zsh
      git: repo=https://github.com/robbyrussell/oh-my-zsh dest=~/.oh-my-zsh
      when: install_oh_my_zsh == true
      tags: install_oh_my_zsh


    ### OSX SETTINGS

    - name: Configure System Settings
      script: scripts/system_settings.sh
      become: true

    # ### DOTFILES

    # - name: Check rcm is installed
    #   stat: path=/usr/local/bin/rcup
    #   register: rcm_installed

    # - name: Install rcm for dotfiles management
    #   shell: brew tap thoughtbot/formulae && brew install rcm
    #   when: rcm_installed.stat.exists == false

    # - name: Check ~/src dir exists
    #   stat: path=~/src/
    #   register: src_dir_exists

    # - name: Assures ~/src dir exists
    #   file: path=~/src state=directory

    # - name: Assures ~/src/thoughtbot dir exists
    #   file: path=~/src/thoughtbot state=directory

    # - name: Install thoughtbot/dotfiles
    #   git: repo=https://github.com/thoughtbot/dotfiles.git dest=~/src/thoughtbot/dotfiles

    # - name: Link ~/dotfiles to ~/src/thoughtbot/dotfiles
    #   file: dest=~/dotfiles 
    #         src=~/src/thoughtbot/dotfiles
    #         state=link
    #         force=yes
      
    # - name: Assures ~/src/{{ dotfile_repo_username }} dir exists
    #   file: path=~/src/{{ dotfile_repo_username }} state=directory

    # - name: Install {{ dotfile_repo_username }}/dotfiles
    #   git: repo=https://github.com/{{ dotfile_repo_username }}/dotfiles.git dest=~/src/{{ dotfile_repo_username }}/dotfiles

    # - name: Link ~/dotfiles-local to ~/src/{{ dotfile_repo_username }}/dotfiles
    #   file: dest=~/dotfiles-local
    #         src=~/src/{{ dotfile_repo_username }}/dotfiles
    #         state=link
    #         force=yes

    # - name: Generate dotfiles with rcup
    #   shell: env RCRC=~/dotfiles/rcrc rcup


    ## POST INSTALL STEPS / Cask gotchas
    #
    # require manual intervention!
    #
    
    - name: Run Little Snitch Installer
      shell: open /opt/homebrew-cask/Caskroom/little-snitch/3.5.3/Little\ Snitch\ Installer.app
      when: "'little-snitch' in applications"

    - name: Run Monolingual
      shell: open ~/Applications/Monolingual.app
      when: "'monolingual' in applications"
